linters: linters_with_defaults(
    line_length_linter(500L),
    object_length_linter(length = 40L),
    object_name_linter = NULL,
    commas_linter(allow_trailing = FALSE),
    cyclocomp_linter(complexity_limit = 15L),
    indentation_linter(indent = 4L, hanging_indent_style = "tidy", assignment_as_infix = TRUE),
    trailing_whitespace_linter(allow_empty_lines = TRUE, allow_in_strings = TRUE),
    whitespace_linter(),
    function_left_parentheses_linter(),
    T_and_F_symbol_linter(),
    any_duplicated_linter(),
    any_is_na_linter(),
    assignment_linter(operator = c("<-", "<<-")),
    empty_assignment_linter(),
    implicit_assignment_linter(except = c("bquote", "expression", "expr", "quo", "quos", "quote"), allow_lazy = FALSE, allow_scoped = FALSE),
    backport_linter(r_version = getRversion(), except = character()),
    boolean_arithmetic_linter(),
    brace_linter(allow_single_line = FALSE),
    class_equals_linter(),
    equals_na_linter(),
    conjunct_test_linter(allow_named_stopifnot = TRUE, allow_filter = c("always")),
    consecutive_assertion_linter(),
    duplicate_argument_linter(except = c("mutate", "transmute")),
    expect_comparison_linter(),
    expect_identical_linter(),
    expect_length_linter(),
    expect_named_linter(),
    expect_not_linter(),
    expect_null_linter(),
    expect_s3_class_linter(),
    expect_s4_class_linter(),
    expect_true_false_linter(),
    expect_type_linter(),
    fixed_regex_linter(),
    for_loop_index_linter(),
    function_argument_linter(),
    function_return_linter(),
    return_linter(return_style = "explicit"),
    if_not_else_linter(exceptions = c("is.null", "is.na", "missing")),
    ifelse_censor_linter(),
    infix_spaces_linter(exclude_operators = NULL, allow_multiple_spaces = TRUE),
    inner_combine_linter(),
    is_numeric_linter(),
    keyword_quote_linter(),
    length_levels_linter(),
    length_test_linter(),
    literal_coercion_linter(),
    matrix_apply_linter(),
    missing_argument_linter(except = c("alist", "quote", "switch"), allow_trailing = FALSE),
    missing_package_linter(),
    namespace_linter(check_exports = TRUE, check_nonexports = TRUE),
    nested_ifelse_linter(),
    numeric_leading_zero_linter(),
    outer_negation_linter(),
    package_hooks_linter(),
    paren_body_linter(),
    paste_linter(allow_empty_sep = FALSE, allow_to_string = FALSE, allow_file_path = "never"),
    pipe_call_linter(),
    pipe_consistency_linter(pipe = "|>"),
    pipe_continuation_linter(),
    quotes_linter(delimiter = "\""),
    redundant_equals_linter(),
    redundant_ifelse_linter(allow10 = TRUE),
    regex_subset_linter(),
    repeat_linter(),
    routine_registration_linter(),
    scalar_in_linter(),
    semicolon_linter(allow_compound = FALSE, allow_trailing = FALSE),
    seq_linter(),
    sort_linter(),
    spaces_inside_linter(),
    spaces_left_parentheses_linter(),
    sprintf_linter(),
    string_boundary_linter(allow_grepl = FALSE),
    strings_as_factors_linter(),
    system_file_linter(),
    todo_comment_linter(todo = c("todo", "fixme")),
    trailing_blank_lines_linter(),
    undesirable_function_linter(fun = list(attach = "use roxygen2's @importFrom statement in packages, or `::` in scripts. attach() modifies the global search path",
                                           setwd = "use withr::with_dir() for a temporary change instead of modifying the global working directory",
                                           source = "manage dependencies through packages. source() loads code into the global environment unless `local = TRUE` is used, which can cause hard-to-predict behavior"), symbol_is_undesirable = FALSE),
    undesirable_operator_linter(op = default_undesirable_operators),
    unnecessary_concatenation_linter(allow_single_expression = TRUE),
    unnecessary_lambda_linter(),
    unnecessary_placeholder_linter(),
    unreachable_code_linter(),
    unused_import_linter(allow_ns_usage = FALSE, except_packages = c("bit64", "data.table", "tidyverse"), interpret_glue = TRUE),
    vector_logic_linter(),
    yoda_test_linter(),
    commented_code_linter(),
    object_usage_linter = NULL
  )
